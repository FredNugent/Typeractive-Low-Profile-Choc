/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

//Renaming Layers to Right, Left and Tri
#define DEFAULT 0
#define LEFT 1
#define RIGHT 2
#define TRI 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LEFT RIGHT>;
            then-layer = <TRI>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  | HOME |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ?  | CAPS|
//                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O     &kp P     &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L     &kp SQT   &kp HOME
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT   &kp QMARK &kp CAPS
                  &kp LALT &mo LEFT BSPC &kp SPACE   &kp RET &mo RIGHT TAB &kp RGUI
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  0  |  1  |  2  |  3 |     |    |    |     |     |     |     | DEL     |
// |      |     |  4  |  5  |  6 |     |    |    |     |     |     |     |         |
// |      |     |  7  |  8  |  9 |     |    |    |     |     |     |     |LEDPWROFF|
//                    | GUI |    | SPC |    |    |     | ALT |
                        bindings = <
   &kp ESC   &kp N0 &kp N1 &kp N2 &kp N3  &trans     &trans &trans &trans &trans &trans &kp DEL
   &trans    &trans &kp N4 &kp N5 &kp N6  &trans     &trans &trans &trans &trans &trans &trans
   &trans    &trans &kp N7 &kp N8 &kp N9  &trans     &trans &trans &kp N7 &kp N8 &kp N9 &trans &ext_power EP_OFF
                          &kp LGUI &mo LEFT &kp SPACE    &kp RET  &mo RIGHT   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  !  |  @  |  #  |  _  |     |    |Home |      |Up  |  (  |  )  | BKSP |
// | CTRL |  $  |  %  |  ^  |     |     |    |End  |  Left|Down|Right|  \  |  `   |
// | SHFT |  &  |  *  | ()  |     |     |    |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |    | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp HOME  &trans         &kp UP         &kp LPAR        &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp END   &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS       &kp LBRC       &kp RBRC        &kp PIPE &kp TILDE
                             &kp LGUI &mo LEFT &kp SPACE   &kp RET   &mo RIGHT      &kp RALT
                        >;
                };

                tri_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |    |     |    | BT1   |     |     |     |     |         |
// |      |     |     |     |    |     |    | BT2   |     |     |     |     |         |
// |      |     |     |     |    |     |    | BTCLR |     |     |     |     |         |
//                    | GUI |    | SPC |    | ENT   |     | ALT |
                        bindings = <
   &trans &trans &trans &trans &trans &trans               &bt BT_CLR     &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans               &bt BT_SEL 0   &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans               &bt BT_SEL 1   &trans &trans &trans &trans &trans
                          &kp LGUI &mo LEFT &kp SPACE    &kp RET  &mo RIGHT   &kp RALT
                        >;
                };
        };
};