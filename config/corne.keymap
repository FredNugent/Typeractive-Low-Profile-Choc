/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

//Renaming Layers to Right, Left and Tri
#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define TRI 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <TRI>;
        };
    };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  | DEL |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ?  | CAPS|
//                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O     &kp P     &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L     &kp SQT   &kp DEL
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT   &kp QMARK &kp CAPS
                  &kp LALT &mo LOWER &kp SPACE   &kp RET &mo RAISE &kp RGUI
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  +  |  1  |  2  |  3  |     |                |    |    |     |     |     |       
// |      |  -  |  4  |  5  |  6  |     |                |    |    |     |     |     |         |
// |      |  0  |  7  |  8  |  9  |     |                |    |    |     |     |     |LEDPWROFF|
//                    | GUI | LWR | SPC |                | ENT| RSE| ALT |
                        bindings = <
   &trans &kp PLUS  &kp N1 &kp N2 &kp N3  &trans          &trans &trans &trans &trans &trans &trans
   &trans &kp MINUS &kp N4 &kp N5 &kp N6  &trans          &trans &trans &trans &trans &trans &trans
   &trans &kp N0    &kp N7 &kp N8 &kp N9  &trans          &trans &trans &trans &trans &trans &ext_power EP_OFF
                          &kp LGUI &mo LOWER &kp SPACE    &kp RET  &mo RAISE   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |                         |Home |     |Up   |     |     |     |
// | SHFT |  ^  |  &  |  *  |  () | ()  |                         |End  | Left|Down |Right|     |     |
// |   \  |  /  |  {  |  }  | []  |  [] |                         |     |     |     |     |     |     |
//                    | GUI | LWR | SPC |                         | ENT | RSE | ALT |
                        bindings = <
   &kp TILDE &kp EXCL  &kp AT    &kp HASH  &kp DLLR &kp PRCNT     &kp HOME  &trans         &kp UP         &trans          &trans &trans
   &kp LSHFT &kp CARET &kp AMPS  &kp STAR  &kp LPAR &kp RPAR      &kp END   &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &trans &trans
   &kp BSLH  &kp FSLH  &kp LBRC  &kp RBRC  &kp LBKT &kp RBKT      &trans    &trans         &trans         &trans          &trans &trans
                             &kp LGUI &mo LOWER &kp SPACE         &kp RET   &mo RAISE      &kp RALT
                        >;
                };

                tri_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |      |     |           |BTCLR |     |      |     |     |         |
// |      |     |     |     |      |     |           |BTSEL1|     |      |     |     |         |
// |      |     |     |     |      |     |           |      |     |      |     |     |         |
//                    | GUI | ALT  | SPC |           | ENT  | RSE | ALT |
                        bindings = <
   &trans &trans &trans &trans &trans &trans         &bt BT_CLEAR  &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans         &bt BT_SEL_0  &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans         &trans     &trans &trans &trans &trans &trans
                &kp LGUI &mo LOWER &kp SPACE         &kp RET  &mo RAISE   &kp RALT
                        >;
                };
        };
};